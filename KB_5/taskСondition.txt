Надо моделировать работу калькулятора следующей конструкции:

в вычислении участвуют целые числа объемом памяти 2 байта;
допустимые операции:
+, -, *, / (целочисленное деление),
% (деление с остатком),
<< (побитовый сдвиг влево),
>> (побитовый сдвиг в право);

операции выполняются последовательно, 
для выполнения операции необходимы два аргумента и знак операции;
после выполнения каждой операции фиксируется и выводится результат;
последовательность операций и аргументов образует выражение;
результат отображается в 16, 10 и 2-ой системе счисления;
при возникновении переполнения выдается Overflow;
при попытке деления на 0 выдается Division by zero;
при вводе знака “C” калькулятор приводиться в исходное состояние,
первый аргумент выражения принимает значение 0 и готов для ввода очередного выражения;
при вводе знака “Off” калькулятор завершает работу.
Нажатие на клавиши калькулятора моделируется 
посредством клавиатурного ввода. Ввод делится на команды:

«целое число» - первый аргумент выражения,
целое не отрицательное число, 
можно последовательно вводить несколько раз, 
предыдущее значение меняется. При вводе не первым аргументом выражения - игнорируется;
«знак операции» «целое число» - второе и последующие операции выражения;
«C» - приведение калькулятора в исходное состояние;
«Off» - завершение работы калькулятора.
Вывод результата моделируется посредством вывода на консоли. Результат выводиться в следующей форме:

«выражение»     HEX «16-ое число»  DEC «10-ое число»  BIN «2-ое число»
«16-ое число» выводиться в верхнем регистре с лидирующими нулями (пример 01FA).

«10-ое число» (пример 1765).

«2-ое число» выводиться разбивкой по четыре цифры с лидирующими нулями (пример 0000 0100 0111 0101).

Построить систему, которая использует объекты:

	1)Объект «система».
	2)Объект для чтения команд. 
После чтения очередной команды объект выдает сигнал с текстом,
содержащим команду. Все команды синтаксический корректны 
(моделирует пульт управления калькулятора).
	3)Объект для выполнения арифметических операции. 
После завершения выдается сигнал с текстом результата. 
Если произошло переполнение или деление на нуль, 
выдается сигнал об ошибке. После выдачи сообщения 
калькулятор переводится посредством 
соответствующего сигнала в исходное положение.
	4)Объект для выполнения операции побитового сдвига. 
После завершения выдается сигнал с текстом результата.
	5)Объект для выполнения операции «C».
	6)Объект для вывода очередного результата на консоль.
Написать программу, реализующую следующий алгоритм:

Вызов метода объекта «система» build_tree_objects ( ).
Построение дерева иерархии объектов.
Установка связей сигналов и обработчиков между объектами.
Вызов метода объекта «система» exec_app ( ).
Приведение всех объектов в состояние готовности.
Цикл для обработки вводимых команд.
Выдача сигнала объекту для ввода команды.
Отработка команды.
После ввода команды «Off» завершить работу.
Все приведенные сигналы и соответствующие обработчики должны быть реализованы.

Все сообщения на консоль выводятся с новой строки.

В набор поддерживаемых команд добавить команду «SHOWTREE» 
и по этой команде вывести дерево иерархии объектов 
системы с отметкой о готовности и завершить работу программы.

Входные данные
Построчно множество команд, в любом количестве. Перечень команд:

«целое не отрицательное число»
«знак операции» «целое число»
C
Последняя команда присутствует всегда:

Off
Пример ввода:

5
+ 5
<< 1
/ 0
+ 5
C
7
8
/ -3
C
9
% -4
+ 7
* 11
Off
Выходные данные
Построчно выводиться результат каждой операции по форме:

«выражение»     HEX «16-ое число»  DEC «10-ое число»  BIN «2-ое число»
Если произошло переполнение:

«выражение»     Overflow
Если произошло переполнение:

«выражение»     Division by zero
Пример вывода:

5 + 5     HEX 000A  DEC 10  BIN 0000 0000 0000 1010
5 + 5 << 1     HEX 0014  DEC 20  BIN 0000 0000 0001 0100
5 + 5 << 1 / 0     Division by zero
0 + 5     HEX 0005  DEC 5  BIN 0000 0000 0000 0101
8 / -3     HEX FFFE  DEC -2  BIN 1111 1111 1111 1110
9 % -4     HEX 0001  DEC 1  BIN 0000 0000 0000 0001
9 % -4 + 7     HEX 0008  DEC 8  BIN 0000 0000 0000 1000
9 % -4 + 7 * 11     HEX 0058  DEC 88  BIN 0000 0000 0101 1000